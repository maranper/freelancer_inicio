/* CTRL+K Y DPUES C PARA COMENTAR */

:root { /* PARA DEFINIR CUSTOM PROPERTY */
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #FFC187; /* rgba(255,193,7,1): */
    --secundario: #0097a7;
    --gris: #757575;
    --grisClaro: #DFE9F3;
}

html {
    font-size: 62.5%;
    box-sizing: border-box; /* Para hacer box model. Esto junto a *, *:before, *:after {...} permiten definir un box de 450px por ej, agregar padding o margenes y que se mantenga en 450px*/
}

*, *:before, *:after {
    box-sizing: inherit;
}

body {
    font-size: 16px; /* 1rem = 10px */
    font-family: 'Krub', sans-serif;
    background-image: linear-gradient(to top, var(--grisClaro) 0%, var(--blanco));
}

h1 {
    font-size: 3.8rem;
}
h2 {
    font-size: 2.8rem;
}
h3 {
    font-size: 1.8rem;
}

h1,h2,h3 {
    text-align: center;
    /* color: var(--primario);*/ 
    /* text-transform: uppercase; */    
}

.titulo { 
    text-align: center;
}
/*
.titulo span { 
    font-size: 2rem;
}*/

.contenedor { /* trabajar con clases permite reutilizar mejor el codigo */
    max-width: 120rem; /*se pone max-width para que trabaje bien el responsive*/
    /*margin-top: 0;*/
    /* margin-right: auto;  auto derecha e izquierda permite centrar */
    /* margin-bottom: 0;*/
    /* margin-left: auto;  auto derecha e izquierda permite centrar */
    margin: 0 auto; /*0 auto; /*top right bottom left. 0 auto ya lo repite para todo bottom y left */
}

.boton {
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 3rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
}

.boton:active { /*hecho por marco*/
    background-color: var(--gris);
}

@media (min-width: 768px) {
    .boton{
        width: auto;
    }
}

.sombra {
    /*-webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48); no necesario para navegadores nuevos
    -moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48); no necesario para navegadores nuevos */
    box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.48);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

.nav-bg {
    background-color: var(--secundario);
}

.navegacion-principal {
    display: flex;
    /*flex-direction: column;*/
    flex-direction: column;
    align-items: center; /*para alinear el menu vertical*/
}

@media (min-width: 768px) { /* mq + TAB para crear media querie*/
    .navegacion-principal {
        flex-direction: row;
        justify-content: space-between;
    }
}
/* 768px 1440px 1400px*/
.navegacion-principal a {
    display: block;    /*display: block; y text-align: center; es equivalente a align-items: center; -> puedo comentar uno u otro. PROBAR*/
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: 700;
    padding: 1rem;
    /* background-color: var(--primario);*/
    /*display: block; inline grid flex*/
}

.navegacion-principal a:hover { /*:visited :focus*/
    color: var(--oscuro);
    background-color: var(--primario);
}

.hero {
    background-image: url(../img/hero.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    position: relative;
    margin-bottom: 2rem;
}

.contenido-hero {
    position: absolute; /*el padre (.hero) siempre tiene q tener pos relativa, y lo contenido es absoluta para poder ubicarlo como queramos*/
    background-color: rgba(0,0,0,.7);
    /* background-color: rgb(0 0 0 / 70% ); sintaxis mas nueva no soportada capaz por todo navegadores*/ 
    width: 100%; /*para que ocupe toda la imagen*/
    height: 100%; /*equivalente a definit top bottom left right
    /*CODIGO PARA ALINEAR EN EL CENTRO EN CUALQUIER CODIGO:*/
    display: flex; /*coloca texto, imagenes y contenido de izquierda a derecha*/ 
    flex-direction: column; /*ahora se pasa de row a column*/
    align-items: center; /*alinea horizontalmente. En modo row es al reves*/
    justify-content: center; /*alinea verticalmente. En modo row es al reves*/
}

.contenido-hero h2, .contenido-hero p {
    color: var(--blanco);
}

.contenido-hero .ubicacion {
    display: flex;
    align-items: flex-end;
}